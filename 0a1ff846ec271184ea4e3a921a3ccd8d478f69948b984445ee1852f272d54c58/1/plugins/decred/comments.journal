{"version":"1","action":"add"}{"token":"0a1ff846ec271184ea4e3a921a3ccd8d478f69948b984445ee1852f272d54c58","parentid":"0","comment":"Excellent proposal as always. Nice touch on splitting into two sections for different audiences, though personally I'm more interested in the technical side of things :)\n\n\u003e This approach provides an extensible and efficient method of consensus-enforced proof chaining which allows the block header to commit to an arbitrary number of short proofs which thin clients can very quickly verify.\n\nDoes this mean _every_ future dataset that generates a commitment will _necessarily_ be a part of consensus or do you see this being used for non-consensus enforced (i.e. off-chain) inclusion proofs as well?\n\nThe GCS filters meant for light clients obviously need to be checked and _should_ be a part of consensus but I'm wondering if you think we'll also ones which (from the PoV of consensus) are only opaque commitments.\n\nRandom showerthought to exemplify what I mean by this: instead of using OP_RETURNs for dcrtime anchors, include a commitment for dcrtime's merkle root for a given period without having full nodes necessarily validate what the underlying dcrtime data is.\n\nThe individual commitments that are not checked via consensus rules have weaker security guarantees then the ones that are (and depend on mechanisms other than regular Decred full nodes to be useful) but I'm wondering whether you believe they should never even be considered or if you see this being useful in the future.","signature":"d6ed0264beb244262f803cde0c5d773ed828cb5ec4fe341c956d573a90fb69c49a3917b5b1c7af94083a93231b271108bfd4abf921060649937bc4cb1e399006","publickey":"6b6ca6070313029795d7445323b130ada779195ff8f10fd07ba9d1627460f686","commentid":"1","receipt":"b148b92b4c098706b24682bb8fef40c1e140b3812ad443aea80f791576116e14c0927e8dd882992d0ca8bf4051fbadeba5ce90a2c0b61c62992831b9f781d40a","timestamp":1559303741,"totalvotes":0,"resultvotes":0,"censored":false}
{"version":"1","action":"add"}{"token":"0a1ff846ec271184ea4e3a921a3ccd8d478f69948b984445ee1852f272d54c58","parentid":"1","comment":"The suggestion to propagate additional commitments that are not part of consensus is an interesting suggestion because it would avoid the added complexity of mining nodes calculating one or more commitments prior to generating a block template, in addition to the corresponding consensus rules to validate the commitments.\n\nMuch of the utility of commitments for data in the block headers comes from the fact that the data is cryptographically verified before being included and are quickly verifiable by an arbitrary client.  If you do not enforce the verification step via consensus rules before propagating the header, the data you are propagating has no assurance of being correct, which would seem to diminish the utility substantially.","signature":"17555acc7b2400d2bb32e8d5d9dbe038f90828e7da6766682cca66d752f9187334143a3e2aa2ab31a12cd5c53537dae419ad53db97d4fbbb43c01cb153130a0a","publickey":"e575447e1acb624bedb7c7934f291e3c1b51bb7223f2c06647e551e4cf93f360","commentid":"2","receipt":"a07d79f7fea9ff64b78a5a17f3b1e322838a1796fe6148b3b1bd3474efd1c798f53cf172d2d237f55f91a13c5f82efc38992812980ad33e3cdd2e235e34dd30f","timestamp":1559312970,"totalvotes":0,"resultvotes":0,"censored":false}
{"version":"1","action":"addlike"}{"token":"0a1ff846ec271184ea4e3a921a3ccd8d478f69948b984445ee1852f272d54c58","commentid":"1","action":"1","signature":"6890e76bfef20a083da48f4c1ca9744b1f57964ba8b834e5846ec362673c93d70d8f2373337a8ebd8ce7d700d55478a739d89d0f46307ff26c1886ee8fc74509","publickey":"e575447e1acb624bedb7c7934f291e3c1b51bb7223f2c06647e551e4cf93f360","receipt":"933f036b0a8bbc624ed6f22164fcbade2e05173f44c3c1b6482b64b4ed806f8903bfc05e55a2aec67d02f31c305ec14c0a645ecf714d6b9631cc7e1cbe292d03","timestamp":1559312976}
{"version":"1","action":"add"}{"token":"0a1ff846ec271184ea4e3a921a3ccd8d478f69948b984445ee1852f272d54c58","parentid":"0","comment":"Your splitting of the proposal into a General Audience and Technical Details sections does a great job of making the technical tangible while still remaining technical.\n\nIt is refreshing to be adding infrastructure like header commitments because it is something that has been discussed extensively in the Bitcoin community for years, but supporting this in Bitcoin would require a hard fork consensus change, which Bitcoin Core / Blockstream do not subscribe to.  IIRC, there has been discussion of including such a commitment in the coinbase for Bitcoin, which is a soft fork change.  While this would be helpful, you really need the commitment in the block header to keep this properly SPV.","signature":"1e1c0a19c5f9aa9c747d92c5c5e8b0cc588e0d63cd477939f55a35afc95254afe8bc4c6f01c6b658209d35b2d322bc6a395bcbeafdcd95e1637f330a40d2fb0d","publickey":"e575447e1acb624bedb7c7934f291e3c1b51bb7223f2c06647e551e4cf93f360","commentid":"3","receipt":"59d24fbaeaec5ba70095d5a75472ecaa3df40aae8b6fd636a48499c8fc53c1ebdd345aa7e9fa902475fb1830e86bf221938b5878382da0cd69efc13841679902","timestamp":1559313321,"totalvotes":0,"resultvotes":0,"censored":false}
{"version":"1","action":"addlike"}{"token":"0a1ff846ec271184ea4e3a921a3ccd8d478f69948b984445ee1852f272d54c58","commentid":"1","action":"1","signature":"b957b70b8ac0d139c1bc568a1b0a265724289f2e6cb5ee74be7c3c6131f78264b165af0c8024c0b5127f6ef3c2cccea82df55c587d636b2d8d3281afe8907805","publickey":"3ee82bd57234f7d2511af118c31fea6cf6abc5da87f816a48dec729d80a1afb0","receipt":"ed8db47eeccca78463e79a6aafbbfae8ef0360d9efd22f52505fac4523a03384bca23d6a60ab95c9d826df72ca3758deee0a950cb2087b499c7fbd99aeaa700e","timestamp":1559314896}
{"version":"1","action":"addlike"}{"token":"0a1ff846ec271184ea4e3a921a3ccd8d478f69948b984445ee1852f272d54c58","commentid":"3","action":"1","signature":"00e4ea34899ecfe29fb599da60c0d1e89f9beec6bf78291678c20142b1393c3dbaefde549b1f6087780cf169206b5b3ede7bf734c4e1d2d25a5b60886f9e5601","publickey":"16557eb57755a7708d61f782df1bad899316d3ace17a11f6a037ae4ba24d85d6","receipt":"63eaf6d6dfdc508aa626c826827753a8f24b5122ad9255eebe9a21cacc5d36e2baf725d8c0f222ed5abbf417c9f22fc3677810c2439062064a924aff19d9430c","timestamp":1559322513}
{"version":"1","action":"addlike"}{"token":"0a1ff846ec271184ea4e3a921a3ccd8d478f69948b984445ee1852f272d54c58","commentid":"2","action":"1","signature":"e26eb33eb879edb6f58309cca694f9279d0b94b5fc7aa62502dcd795b23c162dcc9d310c953edf59b9b7da0895f3be4a844329f1bc688c10bf55698646864c0c","publickey":"16557eb57755a7708d61f782df1bad899316d3ace17a11f6a037ae4ba24d85d6","receipt":"4bf2dcb31fe3e19674fe0eef74e46db177d758d822c49b96131a95344f2a567802df913a52aca934d8badee246e5aafbd22c229c0614241fecfdce33085cc406","timestamp":1559322514}
{"version":"1","action":"addlike"}{"token":"0a1ff846ec271184ea4e3a921a3ccd8d478f69948b984445ee1852f272d54c58","commentid":"1","action":"1","signature":"6b8a2aa279b882c37e24f85e70fc4c65867d47f40f17498f0abd7ceb885c3ad719a811986b2d70f72adb582a8b5665c0316c98491c299db652d7715a58aed607","publickey":"16557eb57755a7708d61f782df1bad899316d3ace17a11f6a037ae4ba24d85d6","receipt":"e55d901cdb15350799e19301f3abf6f6d9789a709824e690538eb7ff4b0ded6ccfba2479d9cb9a9436df0595a05d2e06dda0bb15a1fb9333d1232d252fe8ec08","timestamp":1559322516}
{"version":"1","action":"add"}{"token":"0a1ff846ec271184ea4e3a921a3ccd8d478f69948b984445ee1852f272d54c58","parentid":"1","comment":"\u003e Does this mean every future dataset that generates a commitment will necessarily be a part of consensus or do you see this being used for non-consensus enforced (i.e. off-chain) inclusion proofs as well?\n\nNot every dataset will need a commitment in the header, but those that do will necessarily become part of consensus, yes.  In order to illustrate why, consider the structure of the commitment tree and the generation process.\n\n```\n     CommitmentRoot   \n      /          \\\n  h(c1||c2)  h(c3||c4)\n    /    \\     /    \\\n   c1    c2   c3     c4\n```\n\nLet's assume that `c1` is the GCS filter commitment, `c2` is your hypothesized dcrtime merkle root, and `c3`/`c4` are commitments to other data.\n\nNaturally in order to generate (and later validate) the `CommitmentRoot` you need to know that values of each of those leaf nodes (`c1`, `c2`, `c3`, and `c4`).\n\n`c1` would be generated by creating the filter and hashing it.  Then, that hash needs to itself be hashed with `c2` to generate the `h(c1||c2)` intermediate node and the process repeats until the root is generated.  This necessarily means that `c2` has to be known, come from somewhere, and is now committed to by consensus via the `CommitmentRoot`.  Thus, even if nodes aren't verifying the validity of `c2` itself, it is still necessarily a part of consensus.\n\nThe bigger problem though is that if `c2` can't be generated from the block data itself, that implies it must be coming from some external entity, which introduces several issues for consensus because it would no longer be self contained nor decentralized.  In other words, it would introduce reliance on one or more 3rd-party oracles which moves into the realm  of the oracle problem.\n\nFor completeness, while I know it was just an example, it's worth noting that the dcrtime Merkle roots are already completely provable because they are included in an OP_RETURN in a transaction which itself is included in a Merkle tree whose root is committed to and enforced by the `MerkleRoot`header field which every full node faithfully validates.  Moving to a non-consensus enforced proof there would actually remove the security guarantees the current system provides and therefore largely remove its utility.\n\nAny non-consensus enforced commitments can simply be delivered by a peer-to-peer message.","signature":"95976e613135bb178d247acbe22123fbdb2a292770db875a62c5d5087e8903ed761cafac268fb4bbe0990e9b5e76abc43d3fde463c62b17a2aedfebace13f402","publickey":"937e0161deb065604266635e24506e1e79c8cbbd27c7a83483a56ff1b2293f9b","commentid":"4","receipt":"210070973a0c90a3031b0d81fcb8873fb0a000be9a2488c371ab331b9a7e68e67da87b414657c29e928034082b53566393499ff4efca0c21bade1c7757d74201","timestamp":1559344300,"totalvotes":0,"resultvotes":0,"censored":false}
